{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP0yqfP8ctLoLZm487u3S7U"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#库加载"],"metadata":{"id":"0b-dtQPWV0qf"}},{"cell_type":"code","execution_count":5,"metadata":{"id":"-wHXNsN1VWP6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1753914521572,"user_tz":240,"elapsed":61094,"user":{"displayName":"L zy","userId":"01828591666811296312"}},"outputId":"0b0552fb-c1b7-4124-984d-d1e16df58f32"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: selenium in /usr/local/lib/python3.11/dist-packages (4.34.2)\n","Requirement already satisfied: urllib3~=2.5.0 in /usr/local/lib/python3.11/dist-packages (from urllib3[socks]~=2.5.0->selenium) (2.5.0)\n","Requirement already satisfied: trio~=0.30.0 in /usr/local/lib/python3.11/dist-packages (from selenium) (0.30.0)\n","Requirement already satisfied: trio-websocket~=0.12.2 in /usr/local/lib/python3.11/dist-packages (from selenium) (0.12.2)\n","Requirement already satisfied: certifi>=2025.6.15 in /usr/local/lib/python3.11/dist-packages (from selenium) (2025.7.14)\n","Requirement already satisfied: typing_extensions~=4.14.0 in /usr/local/lib/python3.11/dist-packages (from selenium) (4.14.1)\n","Requirement already satisfied: websocket-client~=1.8.0 in /usr/local/lib/python3.11/dist-packages (from selenium) (1.8.0)\n","Requirement already satisfied: attrs>=23.2.0 in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (25.3.0)\n","Requirement already satisfied: sortedcontainers in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (2.4.0)\n","Requirement already satisfied: idna in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (3.10)\n","Requirement already satisfied: outcome in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (1.3.0.post0)\n","Requirement already satisfied: sniffio>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (1.3.1)\n","Requirement already satisfied: wsproto>=0.14 in /usr/local/lib/python3.11/dist-packages (from trio-websocket~=0.12.2->selenium) (1.2.0)\n","Requirement already satisfied: pysocks!=1.5.7,<2.0,>=1.5.6 in /usr/local/lib/python3.11/dist-packages (from urllib3[socks]~=2.5.0->selenium) (1.7.1)\n","Requirement already satisfied: h11<1,>=0.9.0 in /usr/local/lib/python3.11/dist-packages (from wsproto>=0.14->trio-websocket~=0.12.2->selenium) (0.16.0)\n","Requirement already satisfied: webdriver_manager in /usr/local/lib/python3.11/dist-packages (4.0.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from webdriver_manager) (2.32.3)\n","Requirement already satisfied: python-dotenv in /usr/local/lib/python3.11/dist-packages (from webdriver_manager) (1.1.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from webdriver_manager) (25.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->webdriver_manager) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->webdriver_manager) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->webdriver_manager) (2.5.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->webdriver_manager) (2025.7.14)\n","Requirement already satisfied: google-colab-selenium in /usr/local/lib/python3.11/dist-packages (1.0.15)\n","Requirement already satisfied: notebook>=6.5.7 in /usr/local/lib/python3.11/dist-packages (from google-colab-selenium) (6.5.7)\n","Requirement already satisfied: selenium in /usr/local/lib/python3.11/dist-packages (from google-colab-selenium) (4.34.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (3.1.6)\n","Requirement already satisfied: tornado>=6.1 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (6.4.2)\n","Requirement already satisfied: pyzmq>=17 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (26.2.1)\n","Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (25.1.0)\n","Requirement already satisfied: traitlets>=4.2.1 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (5.7.1)\n","Requirement already satisfied: jupyter-core>=4.6.1 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (5.8.1)\n","Requirement already satisfied: jupyter-client<8,>=5.3.4 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (6.1.12)\n","Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (0.2.0)\n","Requirement already satisfied: nbformat in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (5.10.4)\n","Requirement already satisfied: nbconvert>=5 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (7.16.6)\n","Requirement already satisfied: nest-asyncio>=1.5 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (1.6.0)\n","Requirement already satisfied: ipykernel in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (6.17.1)\n","Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (1.8.3)\n","Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (0.18.1)\n","Requirement already satisfied: prometheus-client in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (0.22.1)\n","Requirement already satisfied: nbclassic>=0.4.7 in /usr/local/lib/python3.11/dist-packages (from notebook>=6.5.7->google-colab-selenium) (1.3.1)\n","Requirement already satisfied: urllib3~=2.5.0 in /usr/local/lib/python3.11/dist-packages (from urllib3[socks]~=2.5.0->selenium->google-colab-selenium) (2.5.0)\n","Requirement already satisfied: trio~=0.30.0 in /usr/local/lib/python3.11/dist-packages (from selenium->google-colab-selenium) (0.30.0)\n","Requirement already satisfied: trio-websocket~=0.12.2 in /usr/local/lib/python3.11/dist-packages (from selenium->google-colab-selenium) (0.12.2)\n","Requirement already satisfied: certifi>=2025.6.15 in /usr/local/lib/python3.11/dist-packages (from selenium->google-colab-selenium) (2025.7.14)\n","Requirement already satisfied: typing_extensions~=4.14.0 in /usr/local/lib/python3.11/dist-packages (from selenium->google-colab-selenium) (4.14.1)\n","Requirement already satisfied: websocket-client~=1.8.0 in /usr/local/lib/python3.11/dist-packages (from selenium->google-colab-selenium) (1.8.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.11/dist-packages (from jupyter-client<8,>=5.3.4->notebook>=6.5.7->google-colab-selenium) (2.9.0.post0)\n","Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.11/dist-packages (from jupyter-core>=4.6.1->notebook>=6.5.7->google-colab-selenium) (4.3.8)\n","Requirement already satisfied: notebook-shim>=0.2.3 in /usr/local/lib/python3.11/dist-packages (from nbclassic>=0.4.7->notebook>=6.5.7->google-colab-selenium) (0.2.4)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (4.13.4)\n","Requirement already satisfied: bleach!=5.0.0 in /usr/local/lib/python3.11/dist-packages (from bleach[css]!=5.0.0->nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (6.2.0)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (0.7.1)\n","Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (0.3.0)\n","Requirement already satisfied: markupsafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (3.0.2)\n","Requirement already satisfied: mistune<4,>=2.0.3 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (3.1.3)\n","Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (0.10.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (25.0)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (1.5.1)\n","Requirement already satisfied: pygments>=2.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (2.19.2)\n","Requirement already satisfied: fastjsonschema>=2.15 in /usr/local/lib/python3.11/dist-packages (from nbformat->notebook>=6.5.7->google-colab-selenium) (2.21.1)\n","Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.11/dist-packages (from nbformat->notebook>=6.5.7->google-colab-selenium) (4.25.0)\n","Requirement already satisfied: ptyprocess in /usr/local/lib/python3.11/dist-packages (from terminado>=0.8.3->notebook>=6.5.7->google-colab-selenium) (0.7.0)\n","Requirement already satisfied: attrs>=23.2.0 in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium->google-colab-selenium) (25.3.0)\n","Requirement already satisfied: sortedcontainers in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium->google-colab-selenium) (2.4.0)\n","Requirement already satisfied: idna in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium->google-colab-selenium) (3.10)\n","Requirement already satisfied: outcome in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium->google-colab-selenium) (1.3.0.post0)\n","Requirement already satisfied: sniffio>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium->google-colab-selenium) (1.3.1)\n","Requirement already satisfied: wsproto>=0.14 in /usr/local/lib/python3.11/dist-packages (from trio-websocket~=0.12.2->selenium->google-colab-selenium) (1.2.0)\n","Requirement already satisfied: pysocks!=1.5.7,<2.0,>=1.5.6 in /usr/local/lib/python3.11/dist-packages (from urllib3[socks]~=2.5.0->selenium->google-colab-selenium) (1.7.1)\n","Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.11/dist-packages (from argon2-cffi->notebook>=6.5.7->google-colab-selenium) (21.2.0)\n","Requirement already satisfied: debugpy>=1.0 in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook>=6.5.7->google-colab-selenium) (1.8.15)\n","Requirement already satisfied: ipython>=7.23.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook>=6.5.7->google-colab-selenium) (7.34.0)\n","Requirement already satisfied: matplotlib-inline>=0.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook>=6.5.7->google-colab-selenium) (0.1.7)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook>=6.5.7->google-colab-selenium) (5.9.5)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.11/dist-packages (from bleach!=5.0.0->bleach[css]!=5.0.0->nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (0.5.1)\n","Requirement already satisfied: tinycss2<1.5,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from bleach[css]!=5.0.0->nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (1.4.0)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.11/dist-packages (from ipython>=7.23.1->ipykernel->notebook>=6.5.7->google-colab-selenium) (75.2.0)\n","Requirement already satisfied: jedi>=0.16 in /usr/local/lib/python3.11/dist-packages (from ipython>=7.23.1->ipykernel->notebook>=6.5.7->google-colab-selenium) (0.19.2)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.11/dist-packages (from ipython>=7.23.1->ipykernel->notebook>=6.5.7->google-colab-selenium) (4.4.2)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.11/dist-packages (from ipython>=7.23.1->ipykernel->notebook>=6.5.7->google-colab-selenium) (0.7.5)\n","Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from ipython>=7.23.1->ipykernel->notebook>=6.5.7->google-colab-selenium) (3.0.51)\n","Requirement already satisfied: backcall in /usr/local/lib/python3.11/dist-packages (from ipython>=7.23.1->ipykernel->notebook>=6.5.7->google-colab-selenium) (0.2.0)\n","Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.11/dist-packages (from ipython>=7.23.1->ipykernel->notebook>=6.5.7->google-colab-selenium) (4.9.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook>=6.5.7->google-colab-selenium) (2025.4.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook>=6.5.7->google-colab-selenium) (0.36.2)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook>=6.5.7->google-colab-selenium) (0.26.0)\n","Requirement already satisfied: jupyter-server<3,>=1.8 in /usr/local/lib/python3.11/dist-packages (from notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=6.5.7->google-colab-selenium) (1.16.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.1->jupyter-client<8,>=5.3.4->notebook>=6.5.7->google-colab-selenium) (1.17.0)\n","Requirement already satisfied: h11<1,>=0.9.0 in /usr/local/lib/python3.11/dist-packages (from wsproto>=0.14->trio-websocket~=0.12.2->selenium->google-colab-selenium) (0.16.0)\n","Requirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from argon2-cffi-bindings->argon2-cffi->notebook>=6.5.7->google-colab-selenium) (1.17.1)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4->nbconvert>=5->notebook>=6.5.7->google-colab-selenium) (2.7)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.11/dist-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook>=6.5.7->google-colab-selenium) (2.22)\n","Requirement already satisfied: parso<0.9.0,>=0.8.4 in /usr/local/lib/python3.11/dist-packages (from jedi>=0.16->ipython>=7.23.1->ipykernel->notebook>=6.5.7->google-colab-selenium) (0.8.4)\n","Requirement already satisfied: anyio>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=6.5.7->google-colab-selenium) (4.9.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.11/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=7.23.1->ipykernel->notebook>=6.5.7->google-colab-selenium) (0.2.13)\n"]}],"source":["!pip install selenium\n","!pip install webdriver_manager\n","%pip install google-colab-selenium"]},{"cell_type":"markdown","source":["# 网站爬取"],"metadata":{"id":"OBJbmFQxV3hM"}},{"cell_type":"markdown","source":["##爬取三大核心模块所有帖子，这些帖子均与申请结果有关\\n\n","1.Early Decision 2.Admission Stories 3.common application"],"metadata":{"id":"fp7v38sLWL9H"}},{"cell_type":"code","source":["import google_colab_selenium as gs\n","from selenium import webdriver\n","from selenium.webdriver.chrome.service import Service\n","from selenium.webdriver.chrome.options import Options\n","from selenium.webdriver.common.by import By\n","from webdriver_manager.chrome import ChromeDriverManager\n","import time\n","import pandas as pd\n","\n","options = Options()\n","options.add_argument(\"--headless\")\n","options.add_argument(\"--disable-gpu\")\n","options.add_argument(\"--log-level=3\")\n","\n","# 开浏览器\n","driver = gs.Chrome()\n","\n","url = 'https://talk.collegeconfidential.com/c/college-admissions/early-decision-early-action/779'\n","driver.get(url)\n","time.sleep(3)\n","\n","# 模拟下滑加载全部内容\n","SCROLL_PAUSE_TIME = 2 #限制1\n","MAX_SCROLL_TIMES = 30 #限制2\n","MAX_POSTS = 2000 #限制3\n","\n","data = []\n","scroll_count = 0\n","last_height = driver.execute_script(\"return document.body.scrollHeight\")\n","\n","while scroll_count < MAX_SCROLL_TIMES and len(data) < MAX_POSTS:\n","    driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n","    time.sleep(SCROLL_PAUSE_TIME)\n","    posts = driver.find_elements(By.CSS_SELECTOR, 'tr.topic-list-item')\n","    for post in posts:\n","        if len(data) >= MAX_POSTS:\n","            break\n","        try:\n","            title_element = post.find_element(By.CSS_SELECTOR, 'a.title.raw-link.raw-topic-link')\n","            title = title_element.text.strip()\n","            url = title_element.get_attribute('href')\n","            post_id = post.get_attribute('data-topic-id')\n","            item = {'id': post_id, 'title': title, 'url': url}\n","            if item not in data:  # 去重\n","                data.append(item)\n","        except:\n","            continue\n","    new_height = driver.execute_script(\"return document.body.scrollHeight\")\n","    if new_height == last_height:\n","        break\n","    last_height = new_height\n","    scroll_count += 1\n","\n","driver.quit()\n","\n","# 保存结果\n","df = pd.DataFrame(data)\n","df.to_csv(\"early.csv\", index=False, encoding=\"utf-8-sig\")\n","print(f\"共抓取 {len(df)} 条帖子，保存至 early.csv\")"],"metadata":{"id":"pRj7N1bUVz52"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 开浏览器\n","driver = gs.Chrome()\n","\n","url = 'https://talk.collegeconfidential.com/c/college-admissions/admissions-hindsight-and-lessons-learned/41'\n","driver.get(url)\n","time.sleep(3)\n","\n","# 模拟下滑加载全部内容\n","SCROLL_PAUSE_TIME = 2 #限制1\n","MAX_SCROLL_TIMES = 30 #限制2\n","MAX_POSTS = 2000 #限制3\n","\n","data = []\n","scroll_count = 0\n","last_height = driver.execute_script(\"return document.body.scrollHeight\")\n","\n","while scroll_count < MAX_SCROLL_TIMES and len(data) < MAX_POSTS:\n","    driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n","    time.sleep(SCROLL_PAUSE_TIME)\n","    posts = driver.find_elements(By.CSS_SELECTOR, 'tr.topic-list-item')\n","    for post in posts:\n","        if len(data) >= MAX_POSTS:\n","            break\n","        try:\n","            title_element = post.find_element(By.CSS_SELECTOR, 'a.title.raw-link.raw-topic-link')\n","            title = title_element.text.strip()\n","            url = title_element.get_attribute('href')\n","            post_id = post.get_attribute('data-topic-id')\n","            item = {'id': post_id, 'title': title, 'url': url}\n","            if item not in data:  # 去重\n","                data.append(item)\n","        except:\n","            continue\n","    new_height = driver.execute_script(\"return document.body.scrollHeight\")\n","    if new_height == last_height:\n","        break\n","    last_height = new_height\n","    scroll_count += 1\n","\n","driver.quit()\n","\n","# 保存结果\n","df = pd.DataFrame(data)\n","df.to_csv(\"admission.csv\", index=False, encoding=\"utf-8-sig\")\n","print(f\"共抓取 {len(df)} 条帖子，保存至 admission.csv\")"],"metadata":{"id":"oKLUhDGUXK2c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 开浏览器\n","driver = gs.Chrome()\n","\n","url = 'https://talk.collegeconfidential.com/c/college-admissions/common-and-coalition-application/39'\n","driver.get(url)\n","time.sleep(3)\n","\n","# 模拟下滑加载全部内容\n","SCROLL_PAUSE_TIME = 2 #限制1\n","MAX_SCROLL_TIMES = 30 #限制2\n","MAX_POSTS = 2000 #限制3\n","\n","data = []\n","scroll_count = 0\n","last_height = driver.execute_script(\"return document.body.scrollHeight\")\n","\n","while scroll_count < MAX_SCROLL_TIMES and len(data) < MAX_POSTS:\n","    driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n","    time.sleep(SCROLL_PAUSE_TIME)\n","    posts = driver.find_elements(By.CSS_SELECTOR, 'tr.topic-list-item')\n","    for post in posts:\n","        if len(data) >= MAX_POSTS:\n","            break\n","        try:\n","            title_element = post.find_element(By.CSS_SELECTOR, 'a.title.raw-link.raw-topic-link')\n","            title = title_element.text.strip()\n","            url = title_element.get_attribute('href')\n","            post_id = post.get_attribute('data-topic-id')\n","            item = {'id': post_id, 'title': title, 'url': url}\n","            if item not in data:  # 去重\n","                data.append(item)\n","        except:\n","            continue\n","    new_height = driver.execute_script(\"return document.body.scrollHeight\")\n","    if new_height == last_height:\n","        break\n","    last_height = new_height\n","    scroll_count += 1\n","\n","driver.quit()\n","\n","# 保存结果\n","df = pd.DataFrame(data)\n","df.to_csv(\"common.csv\", index=False, encoding=\"utf-8-sig\")\n","print(f\"共抓取 {len(df)} 条帖子，保存至 common.csv\")"],"metadata":{"id":"wLPKKeqAXLXx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 帖子爬取"],"metadata":{"id":"PRcyRUlAYleO"}},{"cell_type":"markdown","source":["从一级链接中爬取具体内容"],"metadata":{"id":"Q7wDMMQ0YpGf"}},{"cell_type":"code","source":["# Load CSV\n","df = pd.read_csv('early.csv')\n","\n","# Extract the first 10 URLs\n","urls = df['url'].tolist()\n","\n","# Setup Selenium\n","options = webdriver.ChromeOptions()\n","options.add_argument(\"--headless\")  # Run headlessly\n","service = Service()\n","driver = gs.Chrome()\n","\n","all_rows = []\n","\n","for url in urls:\n","    try:\n","        driver.get(url)\n","        time.sleep(0.05)\n","\n","        # Extract post texts\n","        post_divs = driver.find_elements(By.CSS_SELECTOR, 'div.cooked')\n","        post_texts = [div.text.strip() for div in post_divs]\n","\n","        # Build row\n","        row = {'url': url}\n","        for i, text in enumerate(post_texts):\n","            row[f'post_{i+1}'] = text\n","\n","        all_rows.append(row)\n","\n","    except Exception as e:\n","        all_rows.append({'url': url, 'post_1': f'Error: {e}'})\n","\n","driver.quit()\n","\n","output_df = pd.DataFrame(all_rows)\n","output_df.to_csv('early_column.csv', index=False)\n","print(\"Saved to early_column.csv\")"],"metadata":{"id":"Lb7TbjffXXSZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load CSV\n","df = pd.read_csv('admission.csv')\n","\n","# Extract the first 10 URLs\n","urls = df['url'].tolist()\n","\n","# Setup Selenium\n","options = webdriver.ChromeOptions()\n","options.add_argument(\"--headless\")  # Run headlessly\n","service = Service()\n","driver = gs.Chrome()\n","\n","all_rows = []\n","\n","for url in urls:\n","    try:\n","        driver.get(url)\n","        time.sleep(0.05)\n","\n","        # Extract post texts\n","        post_divs = driver.find_elements(By.CSS_SELECTOR, 'div.cooked')\n","        post_texts = [div.text.strip() for div in post_divs]\n","\n","        # Build row\n","        row = {'url': url}\n","        for i, text in enumerate(post_texts):\n","            row[f'post_{i+1}'] = text\n","\n","        all_rows.append(row)\n","\n","    except Exception as e:\n","        all_rows.append({'url': url, 'post_1': f'Error: {e}'})\n","\n","driver.quit()\n","\n","output_df = pd.DataFrame(all_rows)\n","output_df.to_csv('admission.csv', index=False)\n","print(\"Saved to admission.csv\")"],"metadata":{"id":"dZC8iV94akci"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load CSV\n","df = pd.read_csv('common.csv')\n","\n","# Extract the first 10 URLs\n","urls = df['url'].tolist()\n","\n","# Setup Selenium\n","options = webdriver.ChromeOptions()\n","options.add_argument(\"--headless\")  # Run headlessly\n","service = Service()\n","driver = gs.Chrome()\n","\n","all_rows = []\n","\n","for url in urls:\n","    try:\n","        driver.get(url)\n","        time.sleep(0.05)\n","\n","        # Extract post texts\n","        post_divs = driver.find_elements(By.CSS_SELECTOR, 'div.cooked')\n","        post_texts = [div.text.strip() for div in post_divs]\n","\n","        # Build row\n","        row = {'url': url}\n","        for i, text in enumerate(post_texts):\n","            row[f'post_{i+1}'] = text\n","\n","        all_rows.append(row)\n","\n","    except Exception as e:\n","        all_rows.append({'url': url, 'post_1': f'Error: {e}'})\n","\n","driver.quit()\n","\n","output_df = pd.DataFrame(all_rows)\n","output_df.to_csv('common_column.csv', index=False)\n","print(\"Saved to common_column.csv\")"],"metadata":{"id":"5RtAEj0QamUD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#0/1判别式"],"metadata":{"id":"91745_olan9U"}},{"cell_type":"code","source":["# Load CSV\n","df = pd.read_csv(\"early_column.csv\")\n","\n","# If you have post_1, post_2, etc., merge them into one text column\n","post_cols = [col for col in df.columns if col.startswith(\"post_\")]\n","df[\"text\"] = df[post_cols].fillna(\"\").agg(\" \".join, axis=1) if post_cols else df[\"text\"]\n","\n","API_KEY = \"sk-your-real-api-key-here\"\n","MODEL = \"google/gemini-2.5-flash\"\n","headers = {\n","    \"Authorization\": f\"Bearer {API_KEY}\",\n","    \"Content-Type\": \"application/json\",\n","    \"Referer\": \"https://yourproject.com\",\n","    \"X-Title\": \"Admission Label Classifier\",\n","}\n","\n","def classify_text(text):\n","    prompt = (\n","        f\"Read the following forum post and classify whether it confirms that the author received an admission offer.\\n\\n\"\n","        f\"Post: \\\"{text}\\\"\\n\\n\"\n","        f\"Reply with only a single digit: 1 if it clearly indicates admission (offer received), or 0 if not.\"\n","    )\n","\n","    response = requests.post(\n","        \"https://openrouter.ai/api/v1/chat/completions\",\n","        headers=headers,\n","        json={\n","            \"model\": MODEL,\n","            \"messages\": [{\"role\": \"user\", \"content\": prompt}]\n","        }\n","    )\n","\n","    try:\n","        content = response.json()[\"choices\"][0][\"message\"][\"content\"].strip()\n","        return int(content[0]) if content[0] in [\"0\", \"1\"] else -1\n","    except:\n","        return -1\n","\n","df[\"predicted_label\"] = df[\"text\"].apply(lambda x: classify_text(x[:1000]))\n","df['label'].value_counts()\n","df.to_csv('early01.csv', index=False)"],"metadata":{"id":"NSAjKQpBaqUW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load CSV\n","df = pd.read_csv(\"admission_column.csv\")\n","\n","# If you have post_1, post_2, etc., merge them into one text column\n","post_cols = [col for col in df.columns if col.startswith(\"post_\")]\n","df[\"text\"] = df[post_cols].fillna(\"\").agg(\" \".join, axis=1) if post_cols else df[\"text\"]\n","\n","API_KEY = \"sk-your-real-api-key-here\"\n","MODEL = \"google/gemini-2.5-flash\"\n","headers = {\n","    \"Authorization\": f\"Bearer {API_KEY}\",\n","    \"Content-Type\": \"application/json\",\n","    \"Referer\": \"https://yourproject.com\",\n","    \"X-Title\": \"Admission Label Classifier\",\n","}\n","\n","def classify_text(text):\n","    prompt = (\n","        f\"Read the following forum post and classify whether it confirms that the author received an admission offer.\\n\\n\"\n","        f\"Post: \\\"{text}\\\"\\n\\n\"\n","        f\"Reply with only a single digit: 1 if it clearly indicates admission (offer received), or 0 if not.\"\n","    )\n","\n","    response = requests.post(\n","        \"https://openrouter.ai/api/v1/chat/completions\",\n","        headers=headers,\n","        json={\n","            \"model\": MODEL,\n","            \"messages\": [{\"role\": \"user\", \"content\": prompt}]\n","        }\n","    )\n","\n","    try:\n","        content = response.json()[\"choices\"][0][\"message\"][\"content\"].strip()\n","        return int(content[0]) if content[0] in [\"0\", \"1\"] else -1\n","    except:\n","        return -1\n","\n","df[\"predicted_label\"] = df[\"text\"].apply(lambda x: classify_text(x[:1000]))\n","df['label'].value_counts()\n","df.to_csv('admission01.csv', index=False)"],"metadata":{"id":"BaApgwzSgG2o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load CSV\n","df = pd.read_csv(\"common_column.csv\")\n","\n","# If you have post_1, post_2, etc., merge them into one text column\n","post_cols = [col for col in df.columns if col.startswith(\"post_\")]\n","df[\"text\"] = df[post_cols].fillna(\"\").agg(\" \".join, axis=1) if post_cols else df[\"text\"]\n","\n","API_KEY = \"sk-your-real-api-key-here\"\n","MODEL = \"google/gemini-2.5-flash\"\n","headers = {\n","    \"Authorization\": f\"Bearer {API_KEY}\",\n","    \"Content-Type\": \"application/json\",\n","    \"Referer\": \"https://yourproject.com\",\n","    \"X-Title\": \"Admission Label Classifier\",\n","}\n","\n","def classify_text(text):\n","    prompt = (\n","        f\"Read the following forum post and classify whether it confirms that the author received an admission offer.\\n\\n\"\n","        f\"Post: \\\"{text}\\\"\\n\\n\"\n","        f\"Reply with only a single digit: 1 if it clearly indicates admission (offer received), or 0 if not.\"\n","    )\n","\n","    response = requests.post(\n","        \"https://openrouter.ai/api/v1/chat/completions\",\n","        headers=headers,\n","        json={\n","            \"model\": MODEL,\n","            \"messages\": [{\"role\": \"user\", \"content\": prompt}]\n","        }\n","    )\n","\n","    try:\n","        content = response.json()[\"choices\"][0][\"message\"][\"content\"].strip()\n","        return int(content[0]) if content[0] in [\"0\", \"1\"] else -1\n","    except:\n","        return -1\n","\n","df[\"predicted_label\"] = df[\"text\"].apply(lambda x: classify_text(x[:1000]))\n","df['label'].value_counts()\n","df.to_csv('common01.csv', index=False)"],"metadata":{"id":"hZ5boU6DgLbm"},"execution_count":null,"outputs":[]}]}